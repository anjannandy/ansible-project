- name: Prepare PostgreSQL for Vault
  hosts: postgres_host
  become: yes
  vars:
    vault_db_name: vault
    vault_db_user: vault_admin
    vault_db_password: vault_admin_123
    vault_schema: public
    vault_table: vault_kv_store
    vault_unseal_table: vault_unseal_keys
    pg_port: 5432
    pg_host: "localhost"
    pg_admin_user: "postgres"
    pg_admin_password: "postgres_password"

  tasks:

    - name: Install psycopg2 for Ansible PostgreSQL modules
      apt:
        name: python3-psycopg2
        state: present
        update_cache: yes

    - name: Ensure PostgreSQL is installed
      apt:
        name: postgresql
        state: present

    - name: Ensure Vault database exists
      postgresql_db:
        name: "{{ vault_db_name }}"
        state: present
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Ensure Vault user exists
      postgresql_user:
        name: "{{ vault_db_user }}"
        password: "{{ vault_db_password }}"
        state: present
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Grant database privileges to Vault user
      postgresql_privs:
        db: "{{ vault_db_name }}"
        role: "{{ vault_db_user }}"
        type: database
        privs: ALL
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Create Vault storage table in public schema
      postgresql_query:
        db: "{{ vault_db_name }}"
        query: >
          CREATE TABLE IF NOT EXISTS {{ vault_table }} (
            parent_path TEXT COLLATE "C" NOT NULL,
            path        TEXT COLLATE "C",
            key         TEXT COLLATE "C",
            value       BYTEA,
            CONSTRAINT pkey PRIMARY KEY (path, key)
          );
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Create index on parent_path
      postgresql_query:
        db: "{{ vault_db_name }}"
        query: >
          CREATE INDEX IF NOT EXISTS parent_path_idx ON {{ vault_table }} (parent_path);
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Create unseal key table in public schema
      postgresql_query:
        db: "{{ vault_db_name }}"
        query: >
          CREATE TABLE IF NOT EXISTS {{ vault_unseal_table }} (
            id SERIAL PRIMARY KEY,
            key TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"

    - name: Grant table privileges to vault user
      postgresql_privs:
        db: "{{ vault_db_name }}"
        role: "{{ vault_db_user }}"
        type: table
        objs: "{{ vault_table }},{{ vault_unseal_table }}"
        privs: SELECT,INSERT,UPDATE,DELETE
        login_host: "{{ pg_host }}"
        login_user: "{{ pg_admin_user }}"
        login_password: "{{ pg_admin_password }}"
        port: "{{ pg_port }}"